#!/bin/bash

shimbootsizer() {
    aurorapartition=$(lsblk -pro NAME,PARTLABEL | grep -i Aurora | awk '{print $1}')
    if [ -z "$aurorapartition" ]; then
        exit 1
    fi

    device=$(echo "$aurorapartition" | sed 's/[0-9]\+$//')

    mount "$aurorapartition" /mnt
    freespace=$(df -h "$aurorapartition" | tail -n1 | awk '{print $4}')
    umount /mnt

    read -p "Enter size to allocate (in GB): " shimbootsize
    shimbootsize=$(echo "$shimbootsize" | sed 's/[^0-9.]//g')

    if [ -z "$shimbootsize" ]; then
        exit 1
    fi

    if [[ "$freespace" == *G ]]; then
        freespace=${freespace%G}
    else
        exit 1
    fi
    newsize=$(echo "$freespace - $shimbootsize" | bc)

    if (( $(echo "$newsize <= 0" | bc -l) )); then
        exit 1
    fi

    blocksize=$(dumpe2fs -h "$aurorapartition" 2>/dev/null | awk '/Block size:/ {print $3}')
    blockcount=$(dumpe2fs -h "$aurorapartition" 2>/dev/null | awk '/Block count:/ {print $3}')
    oldbytes=$(echo "$blocksize * $blockcount" | bc)
    shrink=$(echo "$shimbootsize * 1073741824" | bc)
    newbytes=$(echo "$oldbytes - $shrink" | bc)
    newblocks=$(echo "$newbytes / $blocksize" | bc)
    sectorsize=$(blockdev --getss "$device")
    newsectors=$(echo "($newbytes + $sectorsize - 1) / $sectorsize" | bc)
    e2fsck -f "$aurorapartition"
    resize2fs "$aurorapartition" "$newblocks"
    parted "$device" unit s resizepart 4 "$newsectors"
    partprobe "$device"
    e2fsck -f "$aurorapartition" || exit 1
}

read -p "Make/Expand space for shimboot partition? (y/N): " aurorapartitioner
case $aurorapartitioner in
    y|Y) shimbootsizer ;;
    *) ;;
esac
