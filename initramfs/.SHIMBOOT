#!/bin/bash

shimbootsizer() {
    device=$(lsblk -pro NAME,PARTLABEL | grep -i Aurora | awk '{print $1}' | sed 's/[0-9]+$//')
    shimbootpartition=$(lsblk -pro NAME,PARTLABEL $device | grep)
    echo -e "How much space would you like to allocate to Shimboot?\nThis can be changed at any time."
    freespace=$(df -h / | tail -n1 | awk '{print $4}' | sed 's/G/ GB/')
    echo -e "$freespace of free space"
    read -p "Enter size to allocate (in GB): " shimbootsize
    shimbootsize=$(echo "$shimbootsize" | sed 's/[^0-9.]//g')
    if echo $shimbootsize | grep -i "k"; then
        fail "No."
    fi
    size=$(dumpe2fs -h "$shimbootpartition" 2>/dev/null | grep 'Block size:' | awk '{print $3}')
    blocks=$(dumpe2fs -h "$shimbootpartition" 2>/dev/null | grep 'Block count:' | awk '{print $3}')

    if [[ -z "$size" || -z "$blocks" ]]; then
        echo "Cannot find block information."
        exit 1
    fi

    subtract=$(( ($shimbootsize * 1024 * 1024 * 1024) / $size ))
    newsize=$((blocks - subtract))

    if (( newsize <= 0 )); then
        echo "Invalid Size."
        exit 1
    fi

    e2fsck -f "$shimbootpartition"

    resize2fs "$shimbootpartition" "$newsize"

    partnum=$(echo "$shimbootpartition" | grep -o '[0-9]*$')

    sectstart=$(parted -m "$device" unit s print | grep "^$partnum" | cut -d: -f2 | sed 's/s//')
    sectsize=$(blockdev --getss "$device")
    bytes=$(( newsize * size ))
    sectend=$(( sectstart + (bytes / sectsize) - 1 ))

    parted -s "$device" unit s resizepart "$partnum" "$sectend"s

    resize2fs "$shimbootpartition"
}
read -p "Make/Resize Shimboot partition? (y/N): " shimbootpartition
case $shimbootpartition in
    y|Y) shimbootsizer ;;
    *) ;;
esac