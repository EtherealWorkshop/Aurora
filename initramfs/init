#!/bin/busybox sh

auroraselected() {
    echo "Moving mounts to /auroraroot"
    mkdir -p "/auroraroot/sys"
    mount -n -o move "/sys" "/auroraroot/sys"
    mkdir -p "/auroraroot/proc"
    mount -n -o move "/proc" "/auroraroot/proc"
    mkdir -p "/auroraroot/dev"
    mount -n -o move "/dev" "/auroraroot/dev"
    mkdir -p /auroraroot/initramfs
    chmod +x /auroraroot/sbin/init
    pivot_root /auroraroot /auroraroot/initramfs
    umount -l /initramfs
    exec /sbin/init < "$TTY1" >> "$TTY1" 2>&1
}

shimbootselected() {
    shimdir="/auroraroot/usr/share/aurora/images/shims/"
    i=1

    for shim in "$shimdir"/*.bin; do
        [ -e "$shim" ] || continue
        echo "$i) $(basename "$shim")"
        eval "file_$i=\"\$shim\""
        i=$((i + 1))
    done

    if [ "$i" -eq 1 ]; then
        echo "No shims found."
        rm -f /auroraroot/etc/shimboot
        return 1
    fi

    echo -n "Choose your shimboot shim: "
    read choice

    eval "shim=\$file_$choice"

    if [ -n "$shim" ] && [ -e "$shim" ]; then
        echo -n "Enter size to allocate to shimboot rootfs [G]: "
	read size
	size=$(echo $size | sed 's/G//I')
	truncate "$shim" +${size}G
	losetup -Pf $shim
        exec /bootstrap.sh < "$TTY1" >> "$TTY1" 2>&1
    else
        echo "Invalid choice... somehow"
        return 1
    fi
}

clear
echo "Making the auroraroot partition..."
mkdir -p /auroraroot || sleep 10
dev_partition=$(blkid | grep 'LABEL="Aurora"' | awk -F: '{print $1}' || true)
dev=$(echo "$dev_partition" | sed -E 's/p?[0-9]+$//')
if [ -z "$dev_partition" ]; then
    echo "failed to find aurora partition"
    sleep 5
    exit 1
fi
if [ -f "/.UNRESIZED" ]; then
    chmod +x /.UNRESIZED
    bash /.UNRESIZED
    rm -f /.UNRESIZED
    sync
fi
echo "Mounting device..."
mount $dev_partition /auroraroot
if [ -e /auroraroot/etc/shimboot ] || find /auroraroot/usr/share/aurora/images/shims/ -iname "*shimboot*" | grep -q . || blkid | grep "shimboot" ; then
    while true; do
	clear
        echo "1. Aurora [$dev_partition]"
        echo "2. Shimboot (ONLY select this if you have a shimboot shim in Aurora's shim directory or a shimboot drive)"
        echo "3. Shell"
        echo -n "Enter Selection: "
        read initselection
        case $initselection in
            1) auroraselected ;;
            2) shimbootselected ;;
            3) clear && script -qfc 'stty sane && stty erase '^H' && exec busybox sh -l' /dev/null ;;
        esac
    done
else
    auroraselected
fi
