#!/bin/busybox sh

auroraselected() {
    echo "Moving mounts to /auroraroot"
    mkdir -p "/auroraroot/sys"
    mount -n -o move "/sys" "/auroraroot/sys"
    mkdir -p "/auroraroot/proc"
    mount -n -o move "/proc" "/auroraroot/proc"
    mkdir -p "/auroraroot/dev"
    mount -n -o move "/dev" "/auroraroot/dev"
    mkdir -p /auroraroot/initramfs
    chmod +x /auroraroot/sbin/init
    pivot_root /auroraroot /auroraroot/initramfs
    umount -l /initramfs
    exec /sbin/init < "$TTY1" >> "$TTY1" 2>&1
}

shimbootselected() {
    shimboot_partition=$(blkid | grep 'PARTLABEL="shimboot_rootfs' | awk -F: '{print $1}' | head -n1 || true)
    if [ -n "$shimboot_partition" ]; then
        exec /bootstrap.sh < "$TTY1" >> "$TTY1" 2>&1
    else
        shimdir="/auroraroot/usr/share/aurora/images/shims/"
        i=1

        for shim in "$shimdir"/*.bin; do
            [ -e "$shim" ] || continue
            echo "$i) $(basename "$shim")"
            eval "file_$i=\"\$shim\""
            i=$((i + 1))
        done

        if [ "$i" -eq 1 ]; then
            echo "No shims found."
            rm -f /auroraroot/etc/shimboot
            return 1
        fi

        echo -n "Choose your shimboot shim: "
        read choice

        eval "shim=\$file_$choice"

        if [ -n "$shim" ] && [ -e "$shim" ]; then
            echo -n "Enter size to allocate to shimboot rootfs [Ex: +1G]: "
            read size

            mountpoint -q /auroraroot || mount "$dev_partition" /auroraroot

            a_free_kb=$(df -k /auroraroot | awk 'NR==2 {print $4}')
            a_free_bytes=$((a_free_kb * 1024))

            shimbytes=$(stat -c %s "$shim")
            extrabytes=$(numfmt --from=iec "$size" 2>/dev/null || echo 0)
            totalbytes=$((shimbytes + extrabytes))

            if [ "$totalbytes" -ge "$a_free_bytes" ]; then
                echo "ERROR: Not enough free space in Aurora to shrink by $(numfmt --to=iec "$totalbytes")"
                umount /auroraroot
                return 1
            fi

            totalsectors=$(( (totalbytes + 511) / 512 ))

            aurorainfo=$(sgdisk -i 4 "$dev")
            aurorastart=$(echo "$aurorainfo" | grep "First sector" | awk '{print $3}')
            auroraend=$(echo "$aurorainfo" | grep "Last sector" | awk '{print $3}')
            newauroraend=$((auroraend - totalsectors))
            shimbootpartition_start=$((newauroraend + 1))

            if [ "$newauroraend" -le "$aurorastart" ]; then
                echo "ERROR: Cannot shrink Aurora below minimum size"
                return 1
            fi

            echo "Shrinking Aurora: end $auroraend â†’ $newauroraend"
            umount /auroraroot
            e2fsck -f "$dev_partition"
            resize2fs "$dev_partition" $(( (newauroraend - aurorastart + 1) * 512 ))s

            sgdisk --delete=4 "$dev"
            sgdisk --new=4:${aurorastart}:${newauroraend} --change-name=4:"Aurora" "$dev"
            partprobe "$dev"
            sleep 2

            mount "$dev_partition" /auroraroot

            sgdisk --new=5:${shimbootpartition_start}:0 --change-name=5:"shimboot_rootfs" "$dev"
            partprobe "$dev"
            sleep 2

            looproot=$(losetup -Pf --show "$shim")
            looprootpart=$(blkid | grep 'PARTLABEL="shimboot_rootfs' | grep "$looproot" | awk -F: '{print $1}' | head -n1 || true)

            mkfs.ext4 "${dev}p5"
            mkdir -p /mnt/shimloop /mnt/newshim
            mount "$looprootpart" /mnt/shimloop
            mount "${dev}p5" /mnt/newshim
            cp -a /mnt/shimloop/. /mnt/newshim/
            umount /mnt/shimloop /mnt/newshim
            losetup -d "$looproot"

            echo "shimboot_rootfs successfully copied to ${dev}p5"
            exec /bootstrap.sh < "$TTY1" >> "$TTY1" 2>&1
        else
            echo "Invalid choice... somehow"
            return 1
        fi
    fi
}

clear
echo "Making the auroraroot partition..."
mkdir -p /auroraroot || sleep 10
dev_partition=$(blkid | grep 'LABEL="Aurora"' | awk -F: '{print $1}' || true)
dev=$(echo "$dev_partition" | sed -E 's/p?[0-9]+$//')
if [ -z "$dev_partition" ]; then
    echo "failed to find aurora partition"
    sleep 5
    exit 1
fi
if [ -f "/.UNRESIZED" ]; then
    chmod +x /.UNRESIZED
    bash /.UNRESIZED
    rm -f /.UNRESIZED
    sync
fi
echo "Mounting device..."
mount $dev_partition /auroraroot
if [ -e /auroraroot/etc/shimboot ] || find /auroraroot/usr/share/aurora/images/shims/ -iname "*shimboot*" | grep -q . || blkid | grep "shimboot" ; then
    while true; do
        clear
        echo "1. Aurora [$dev_partition]"
        echo "2. Shimboot (ONLY select this if you have a shimboot shim in Aurora's shim directory or a shimboot partition already)"
        echo "3. Shell"
        echo -n "Enter Selection: "
        read initselection
        case $initselection in
            1) auroraselected ;;
            2) shimbootselected ;;
            3) clear && script -qfc 'stty sane && stty erase '^H' && exec busybox sh -l' /dev/null ;;
        esac
    done
else
    auroraselected
fi
