#!/bin/bash

# kvs - but it's bash :trol:

set -euo pipefail

DEBUG=0

for arg in "$@"; do
    if [[ "$arg" == "--debug" || "$arg" == "-d" ]]; then
        DEBUG=1
    fi
done

debug() {
    if [[ $DEBUG -eq 1 ]]; then
        echo "DEBUG: $*"
    fi
}

trim() {
    local s="$1"
    echo "${s//$'\n'/}"
}

get_kv() {
    local output
    if ! output=$(tpmc read 0x1008 9 2>/dev/null); then
        echo "Error reading kernver"
        echo "Please report as a bug at https://github.com/kxtzownsu/KVS"
        sleep 86400
        echo "Error!"
        return
    fi
    output=$(trim "$output")

    if [[ "$output" == 10* ]]; then
        debug "Using v1.0 kernver format"
        local b1 b2 b3 b4
        read -r b1 b2 b3 b4 <<< "$(echo "$output" | cut -d' ' -f13-16)"
        printf "0x%02x%02x%02x%02x (v1.0)\n" "$b4" "$b3" "$b2" "$b1"
    elif [[ "$output" == 2* ]]; then
        debug "Using v0.2 kernver format"
        local b1 b2 b3 b4
        read -r b1 b2 b3 b4 <<< "$(echo "$output" | cut -d' ' -f15-18)"
        printf "0x%02x%02x%02x%02x (v0.2)\n" "$b4" "$b3" "$b2" "$b1"
    else
        echo "N/A"
    fi
}

get_tv() {
    local output
    output=$(tpmc tpmver 2>/dev/null || echo "N/A")
    echo "$(trim "$output")"
}

get_fwmp() {
    local output
    output=$(tpmc read 0x100A 5 2>/dev/null || echo "")
    output=$(trim "$output")
    if [[ -z "$output" ]]; then
        echo "N/A (Most likely unenrolled)"
        return
    fi
    local fwmp_hex
    fwmp_hex=$(echo "$output" | cut -d' ' -f13)
    if [[ -z "$fwmp_hex" ]]; then
        echo "Failed to parse FWMP value from output."
        return
    fi
    echo "0x$fwmp_hex"
}

get_gsc() {
    local output
    output=$(gsctool -a -f 2>/dev/null | tail -n 1 | awk '{printf $2}')
    if [[ -z "$output" ]]; then
        echo "Error reading GSC(cr50/ti50) version"
        echo "Please report as a bug at https://github.com/kxtzownsu/KVS"
        sleep 86400
        echo "Error!"
        return
    fi
    echo "$output"
}

ui_header() {
    echo "KVS: Kernel Version Switcher ($(cat /sys/devices/virtual/dmi/id/product_name))"
    echo "Kernver: $1"
    echo "TPM: $2"
    echo "FWMP: $3"
    echo "GSC RW Version: $4"
    echo "-=-=-=-=-=-=-=-=-=-=-=-=-"
}

show_credits() {
    echo "kxtzownsu - Writing KVS 1 and 2"
    echo "sophia - rewriting in bash :3"
}

kernver_faq() {
    cat << EOF
Basic kernver FAQ:
Updated: 7/28/25 12:20 AM EST
------------------------------------------
Kernver 0: All versions will boot
Kernver 1: All versions will boot
Kernver 2: Versions R112 and up will boot
Kernver 3: Versions R120 and up will boot
Kernver 4: Versions R125 and up will boot
Kernver 69420: Sophia will be proud of you
EOF
}

ui_flash() {
    local flashtype="$1"
    echo "What kernver would you like to flash? "
    read -r kerninput

    if ! [[ "$kerninput" =~ ^0x[0-9a-fA-F]{1,8}$ ]]; then
        echo "$kerninput: Invalid kernver: Please format in hex [e.g. 0x00000000]"
        exit 1
    fi

    local kernver_type="v0"
    local current_kernver
    current_kernver=$(get_kv)

    if [[ "$current_kernver" == *"(v1.0)" ]]; then
        kernver_type="v1"
    fi

    echo "To properly set your kernver, you need to downgrade first in dev mode."
    echo "This is because vboot will set the kernver based on whatever kernel version is signed on-disk"
    sleep 2

    local kvg_output

    if [[ "$kernver_type" == "v0" ]]; then
        kvg_output=$(kvg "$kerninput" --ver=0 2>/dev/null || echo "")
    else
        kvg_output=$(kvg "$kerninput" --ver=1 2>/dev/null || echo "")
    fi

    if [[ -z "$kvg_output" ]]; then
        echo "KVG failed, cannot flash kernver."
        exit 1
    fi

    tpmc write 0x1008 "$kvg_output" 2>/dev/null
    echo "Flash complete."
}

clear_screen() {
    printf "\033[H\033[J"
}

main_menu() {
    local tpmver fwmp gscver kernver choice

    if [[ "$EUID" -ne 0 ]]; then
        echo "Please run KVS as root!"
        exit 1
    fi

    tpmver=$(get_tv)
    fwmp=$(get_fwmp)
    gscver=$(get_gsc)

    while true; do
        kernver=$(get_kv)

        clear_screen

        ui_header "$kernver" "$tpmver" "$fwmp" "$gscver"

        echo "1) Flash new kernver"
        echo "2) Run KAUB (Kernver Automatic Update Blocker)"
        echo "3) Kernver FAQ"
        echo "4) Credits"
        echo "5) Shell"
        echo "6) Reboot"
        echo -n "> "

        read -r choice
        case "$choice" in
            1)
                ui_flash "tpm0"
                echo && read -rp "Press ENTER to return to the main menu"
                ;;
            2)
                echo "KAUB is not released yet. Please complain to @kxtzownsu on discord." # :3
                echo && read -rp "Press ENTER to return to the main menu"
                ;;
            3)
                kernver_faq
                echo && read -rp "Press ENTER to return to the main menu"
                ;;
            4)
                show_credits
                echo && read -rp "Press ENTER to return to the main menu"
                ;;
            5)
                /bin/bash
                echo && read -rp "Press ENTER to return to the main menu"
                ;;
            6)
                exit 0
                ;;
            *)
                echo "You have entered an invalid option... stupid..."
                echo && read -rp "Press ENTER to return to the main menu"
                ;;
        esac
    done
}

main_menu "$@"
