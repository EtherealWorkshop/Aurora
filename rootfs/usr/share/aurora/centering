center() {
    local width=$(tput cols)
    local offset="${1:-0}"

    while IFS= read -r line || [[ -n $line ]]; do
        local plain=$(echo -e "$line" | sed -E 's/\x1b\[[0-9;]*[mK]//g')
        local len=${#plain}
        local pad=$(( (width - len) / 2 + offset ))
        (( pad < 0 )) && pad=0
        printf "%*s%s\n" "$pad" "" "$line"
    done
}
export -f center
read_center() {
    local dynamic=0
    if [[ "$1" == "-d" ]]; then
        dynamic=1
        shift
    fi

    local prompt="$1"
    local readvar="$2"
    local offset="${3:-0}"
    local width=$(tput cols)

    local plain=$(echo -e "$prompt" | sed -E 's/\x1b\[[0-9;]*[mK]//g')
    local plen=${#plain}
    local pad=$(( (width - plen) / 2 + offset ))
    (( pad < 0 )) && pad=0

    if (( ! dynamic )); then
        printf "%*s%s" "$pad" "" "$prompt"
        if [[ -n "$readvar" ]]; then
            read -r "$readvar"
        else
            read -r
        fi
    else
        printf "%*s%s" "$pad" "" "$prompt"

        local input=""
        local char=""
        local ilen=0
        local nowrap=1

        local stty=$(stty -g)
        stty -icanon -echo

        while IFS= read -rsn1 char; do
            if [[ -z $char ]]; then
                break
            elif [[ $char == $'\x7f' || $char == $'\x08' || $char == $'\b'  || $char == '^H' ]]; then
                if [[ -n $input ]]; then
                    input="${input::-1}"
                    ((ilen--))
                    tput cr
                    tput el
                    local pad=$(( (width - plen - ilen) / 2 + offset ))
                    (( pad < 0 )) && pad=0
                    printf "%*s%s%s" "$pad" "" "$prompt" "$input"
                fi
            elif [[ $char == $'\x1b' ]]; then
                read -rsn2 discard
                continue
            else
                input+="$char"
                ((ilen++))

                if (( nowrap && (plen + ilen >= width) )); then
                    nowrap=0
                    echo -n "$char"
                elif (( nowrap )); then
                    tput cr
                    tput el
                    local pad=$(( (width - plen - ilen) / 2 + offset ))
                    (( pad < 0 )) && pad=0
                    printf "%*s%s%s" "$pad" "" "$prompt" "$input"
                else
                    echo -n "$char"
                fi
            fi
        done
        echo ""
        if [[ -n "$readvar" ]]; then
            printf -v "$readvar" '%s' "$input"
        fi
        stty "$stty"
    fi
}
export -f read_center